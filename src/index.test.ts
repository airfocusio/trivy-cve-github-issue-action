import { extractTasksFromIssueBody, closeAllTasksInIssueBody, renderVulnerabilityToGithubIssue } from './index'

it('renderVulnerabilityToGithubIssue', () => {
  expect(
    renderVulnerabilityToGithubIssue({
      hashId: '123',
      vulnerabilityID: 'CVE-0',
      severity: 'CRITICAL',
      cvssNvdV3Vector: 'CVSS:3.1',
      cvssNvdV3Score: 10,
      title: 'Title',
      description: 'Description',
      locations: [
        {
          artifactName: 'alpine:3.16,',
          artifactNameShort: 'alpine',
          packageName: 'lib',
          installedVersion: '1.0.0',
          fixedVersion: '1.0.1',
        },
      ],
      references: ['https://link1', 'https://link2'],
    })
  ).toEqual({
    title: '[CVE-0] Title',
    body:
      '## Overview\n' +
      '\n' +
      'ID: CVE-0\n' +
      'Severity: CRITICAL\n' +
      'V3Vector: CVSS:3.1\n' +
      'V3Score: 10.0\n' +
      '\n' +
      '## Packages\n' +
      '\n' +
      '- [ ] `alpine:3.16,` `lib` (installed `1.0.0`, fixed `1.0.1`)\n' +
      '\n' +
      '## Details\n' +
      '\n' +
      'Description\n' +
      '\n' +
      '## References\n' +
      '\n' +
      '* https://link1\n' +
      '* https://link2\n' +
      '\n' +
      '---\n' +
      '\n' +
      '123',
    labels: [{ name: 'trivy' }, { name: 'CRITICAL' }],
    state: 'open',
  })
})

it('extractTasksFromIssueBody', () => {
  expect(extractTasksFromIssueBody('')).toEqual([])
  expect(extractTasksFromIssueBody('- [ ] A')).toEqual([{ label: 'A', done: false }])
  expect(extractTasksFromIssueBody('- [x] A')).toEqual([{ label: 'A', done: true }])
  expect(extractTasksFromIssueBody('- [ ] A\n- [x] B\n')).toEqual([
    { label: 'A', done: false },
    { label: 'B', done: true },
  ])
})

it('closeAllTasksInIssueBody', () => {
  expect(closeAllTasksInIssueBody('')).toEqual('')
  expect(closeAllTasksInIssueBody('- [ ] A')).toEqual('- [x] A')
  expect(closeAllTasksInIssueBody('- [x] A')).toEqual('- [x] A')
  expect(closeAllTasksInIssueBody('- [ ] A\n- [x] B\n')).toEqual('- [x] A\n- [x] B\n')
})
