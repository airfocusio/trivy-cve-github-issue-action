import { extractTasksFromIssueBody, closeAllTasksInIssueBody, renderVulnerabilityToGithubIssue } from './index'

it('renderVulnerabilityToGithubIssue', () => {
  expect(
    renderVulnerabilityToGithubIssue({
      id: '123',
      vulnerabilityID: 'CVE-0',
      severity: 'CRITICAL',
      cvssNvdV3Vector: 'CVSS:3.1',
      cvssNvdV3Score: 10,
      title: 'Title',
      description: 'Description',
      locations: [
        {
          id: 'abcde012345',
          artifactNameShort: 'alpine',
          packageName: 'lib',
          versions: [
            {
              artifactVersion: '3.15',
              installedVersion: '1.0.0',
              fixedVersion: '1.2.0',
            },
            {
              artifactVersion: '3.16',
              installedVersion: '1.1.0',
              fixedVersion: '1.2.0',
            },
          ],
        },
        {
          id: '012345abcde',
          artifactNameShort: 'busybox',
          packageName: 'lib',
          versions: [
            {
              artifactVersion: '1.1',
              installedVersion: '1.0.0',
              fixedVersion: '1.2.0',
            },
            {
              artifactVersion: '1.2',
              installedVersion: '1.1.0',
              fixedVersion: '1.2.0',
            },
          ],
        },
      ],
      references: ['https://link1', 'https://link2'],
    })
  ).toEqual({
    title: '[CVE-0] Title',
    body:
      '## Overview\n' +
      '\n' +
      'ID: CVE-0\n' +
      'Severity: CRITICAL\n' +
      'V3Vector: CVSS:3.1\n' +
      'V3Score: 10.0\n' +
      '\n' +
      '## Locations\n' +
      '\n' +
      '- [ ] artifact `alpine`, package `lib` (`alpine:3.15/lib@1.0.0`, `alpine:3.16/lib@1.1.0`) <!-- location-id=abcde012345 -->\n' +
      '- [ ] artifact `busybox`, package `lib` (`busybox:1.1/lib@1.0.0`, `busybox:1.2/lib@1.1.0`) <!-- location-id=012345abcde -->\n' +
      '\n' +
      '## Details\n' +
      '\n' +
      'Description\n' +
      '\n' +
      '## References\n' +
      '\n' +
      '* https://link1\n' +
      '* https://link2\n' +
      '\n' +
      '---\n' +
      '\n' +
      '123',
    labels: [{ name: 'trivy' }, { name: 'CRITICAL' }],
    state: 'open',
  })
})

it('extractTasksFromIssueBody', () => {
  expect(extractTasksFromIssueBody('', 'foo')).toEqual([])
  expect(extractTasksFromIssueBody('- [ ] A <!-- foo-id=a -->', 'foo')).toEqual([
    { label: 'A <!-- foo-id=a -->', done: false, id: 'a' },
  ])
  expect(extractTasksFromIssueBody('- [ ] A <!-- foo-id=a -->', 'bar')).toEqual([
    { label: 'A <!-- foo-id=a -->', done: false },
  ])
  expect(extractTasksFromIssueBody('- [x] A <!-- foo-id=a -->', 'foo')).toEqual([
    { label: 'A <!-- foo-id=a -->', done: true, id: 'a' },
  ])
  expect(extractTasksFromIssueBody('- [ ] A <!-- foo-id=a -->\n- [x] B <!-- foo-id=b -->\n', 'foo')).toEqual([
    { label: 'A <!-- foo-id=a -->', done: false, id: 'a' },
    { label: 'B <!-- foo-id=b -->', done: true, id: 'b' },
  ])
})

it('closeAllTasksInIssueBody', () => {
  expect(closeAllTasksInIssueBody('', 'foo')).toEqual('')
  expect(closeAllTasksInIssueBody('- [ ] A', 'foo')).toEqual('- [ ] A')
  expect(closeAllTasksInIssueBody('- [ ] A <!-- foo-id=a -->', 'foo')).toEqual('- [x] A <!-- foo-id=a -->')
  expect(closeAllTasksInIssueBody('- [x] A <!-- foo-id=a -->', 'foo')).toEqual('- [x] A <!-- foo-id=a -->')
  expect(closeAllTasksInIssueBody('- [ ] A <!-- foo-id=a -->\n- [x] B <!-- foo-id=b -->\n', 'foo')).toEqual(
    '- [x] A <!-- foo-id=a -->\n- [x] B <!-- foo-id=b -->\n'
  )
})
